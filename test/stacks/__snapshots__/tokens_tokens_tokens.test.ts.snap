// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TokensTokensTokens 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ImplicitJoinNamedBucketDA919B54": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "implicit-join-name-",
              {
                "Ref": "AWS::AccountId",
              },
              "-",
              {
                "Ref": "AWS::Region",
              },
            ],
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "JoinNamedBucket829C7202": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": {
          "Fn::Join": [
            "-",
            [
              "join-named",
              {
                "Ref": "AWS::AccountId",
              },
              {
                "Ref": "AWS::Region",
              },
            ],
          ],
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StackNamesEnv9BC0B335": {
      "DependsOn": [
        "StackNamesEnvServiceRole79CE8D59",
      ],
      "Properties": {
        "Code": {
          "ZipFile": ""use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = handler;
function log(message) {
    if (process.env.LogLevel) {
        console.log(JSON.stringify(message));
    }
}
async function handler(event, context) {
    log({ Event: event });
    log({ Context: context });
    return Promise.resolve(event !== null && event !== void 0 ? event : {});
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWNoby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25zdHJ1Y3RzL2xhbWJkYXMvZWNoby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBLDBCQUlDO0FBVEQsU0FBUyxHQUFHLENBQUMsT0FBNEI7SUFDdkMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7QUFDSCxDQUFDO0FBQ00sS0FBSyxVQUFVLE9BQU8sQ0FBQyxLQUFVLEVBQUUsT0FBWTtJQUNwRCxHQUFHLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUN0QixHQUFHLENBQUMsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUMxQixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxhQUFMLEtBQUssY0FBTCxLQUFLLEdBQUksRUFBRSxDQUFDLENBQUM7QUFDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGxvZyhtZXNzYWdlOiBSZWNvcmQ8c3RyaW5nLCBhbnk+KSB7XG4gIGlmIChwcm9jZXNzLmVudi5Mb2dMZXZlbCkge1xuICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTtcbiAgfVxufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoZXZlbnQ6IGFueSwgY29udGV4dDogYW55KSB7XG4gIGxvZyh7IEV2ZW50OiBldmVudCB9KTtcbiAgbG9nKHsgQ29udGV4dDogY29udGV4dCB9KTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShldmVudCA/PyB7fSk7XG59XG4iXX0=",
        },
        "Environment": {
          "Variables": {
            "REGION_TOKEN": {
              "Ref": "AWS::Region",
            },
            "SOME_STACK_NAMES": "TokensTokensTokens,TokensTokensTokens-Valinor,TokensTokensTokens-Beleriand",
            "SPIDER": "Shelob",
            "SPIDER_MOTHER": "Ungoliant",
            "STACK_NAMES": "TokensTokensTokens,TokensTokensTokens-Valinor,TokensTokensTokens-Beleriand,TokensTokensTokens-AnotherStack",
            "STATIC_NAMED_BUCKET": {
              "Ref": "StaticNamedBucketF597C035",
            },
            "UNNAMED_BUCKET": {
              "Ref": "UnnamedBucketC3A6BB1E",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "StackNamesEnvServiceRole79CE8D59",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StackNamesEnvServiceRole79CE8D59": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticNamedBucketF597C035": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": "static-named-000000000000-us-west-2",
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "UnnamedBucketC3A6BB1E": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
