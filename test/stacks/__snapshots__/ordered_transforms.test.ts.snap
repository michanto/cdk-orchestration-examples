// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderedTransforms 1`] = `
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EchoStepFunction": {
      "Properties": {
        "DefinitionString": "{
  "StartAt": "MyPassState",
  "States": {
    "MyPassState": {
      "Type": "Pass",
      "Next": "Wait for 3 seconds"
    },
    "Wait for 3 seconds": {
      "Seconds": 3,
      "Type": "Wait",
      "Next": "Convert HelloWorld to Base64"
    },
    "Echo Input to Output": {
      "Parameters": {
        "FunctionName": "EchoInput",
        "Payload": {
          "input": "Hello, world!"
        }
      },
      "Resource": "arn:aws:states:::lambda:invoke",
      "Type": "Task",
      "End": true,
      "Retry": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "IntervalSeconds": 15,
          "MaxAttempts": 2,
          "BackoffRate": 4.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "LambdaTaskFailed"
        }
      ]
    },
    "LambdaTaskFailed": {
      "Type": "Fail"
    }
  }
}",
        "RoleArn": {
          "Fn::GetAtt": [
            "ImportEchoInputSFRoleCFCF9D47",
            "Arn",
          ],
        },
        "StateMachineName": "EchoInput",
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "ImportEchoInputEchoInputLambdaFD2F9CC0": {
      "DependsOn": [
        "ImportEchoInputEchoInputLambdaServiceRole8568B5AC",
      ],
      "Properties": {
        "Code": {
          "ZipFile": ""use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = handler;
function log(message) {
if (process.env.LogLevel) {
console.log(JSON.stringify(message));
}
}
async function handler(event, context) {
log({ Event: event });
log({ Context: context });
return Promise.resolve(event !== null && event !== void 0 ? event : {});
}",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "EchoInput",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ImportEchoInputEchoInputLambdaServiceRole8568B5AC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ImportEchoInputEchoInputLambdaServiceRole8568B5AC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ImportEchoInputSFRoleCFCF9D47": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ImportEchoInputSFRoleDefaultPolicy4D60284E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ImportEchoInputEchoInputLambdaFD2F9CC0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ImportEchoInputEchoInputLambdaFD2F9CC0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ImportEchoInputSFRoleDefaultPolicy4D60284E",
        "Roles": [
          {
            "Ref": "ImportEchoInputSFRoleCFCF9D47",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
